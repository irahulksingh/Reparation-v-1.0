@model HgWorkflow.Models.WorkOrder

@{
    ViewBag.Title = "Create";
}

<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.10.4/themes/excite-bike/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/NewStyle.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="create-page">
        <div class="form">
            <form class="create-page">

                <h2>Create new work-order</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-10 text-left">

                    @Html.Label("Work-Order Id:")
                    @Html.TextBoxFor(model => model.WorkOrderId, new { @class = "form-control", @readonly = "true", Style="background:#cccccc;", Value = Session["ButikId"].ToString() + "-" + DateTime.Now.ToString("yyMMddHHmm") })

                </div>

                <div class="col-md-7">
                    @Html.EditorFor(model => model.GoldSmithName, new { htmlAttributes = new { Placeholder = "Gold-smith", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GoldSmithName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { Placeholder = "Customer name", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.CustomerMobileNumber, new { htmlAttributes = new { Placeholder = "Contact Number", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerMobileNumber, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.CustomerEmail, new { htmlAttributes = new { Placeholder = "Customer-Email", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerEmail, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.JewelleryDescription1, new { htmlAttributes = new { Placeholder = "Jewellery(1)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JewelleryDescription1, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.WorkToBeDone, new { htmlAttributes = new { Placeholder = "To be done(1)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkToBeDone, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.JewelleryDescription2, new { htmlAttributes = new { Placeholder = "Jewellery(2)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JewelleryDescription2, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.WorkToBeDone2, new { htmlAttributes = new { Placeholder = "To be done(2)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkToBeDone2, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.JewelleryDescription3, new { htmlAttributes = new { Placeholder = "Jewellery(3)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JewelleryDescription3, "", new { @class = "text-danger" })
                </div>


                <div class="col-md-5">
                    @Html.EditorFor(model => model.WorkToBeDone3, new { htmlAttributes = new { Placeholder = "To be done(3)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkToBeDone3, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.AgentName, new { htmlAttributes = new { @class = "form-control", @readonly = "true", Style = "background:#cccccc;" , Value = Session["FullName"].ToString() } })
                    @Html.ValidationMessageFor(model => model.AgentName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ProductGivenOn, new { htmlAttributes = new { Placeholder = "Given On (MM-dd-yyyy)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductGivenOn, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.DateProposed, new { htmlAttributes = new { Placeholder = "Date Proposed (MM-dd-yyyy)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateProposed, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.DateAcceptedOrRejected, new { htmlAttributes = new { Placeholder = "Accepted / rejected on (MM-dd-yyyy)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateAcceptedOrRejected, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-7">
                    @Html.EditorFor(model => model.ProductToBeReturnedOn, new { htmlAttributes = new { Placeholder = "To be Returned on (MM-dd-yyyy)", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductToBeReturnedOn, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-5">
                    @Html.EditorFor(model => model.AmountEstimate, new { htmlAttributes = new { Placeholder = "Estimate given", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AmountEstimate, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.AmountToBeCollected, new { htmlAttributes = new { Placeholder = "Actual amount", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AmountToBeCollected, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-5">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { placeholder = "Status", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-7">
                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { placeholder = "Comments", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
                <div>
                    <input type="submit" value="Create" class="btn btn-default" style="background-color:#004785;color:#ffffff" />
                </div>
                <div class="text-center">
                    @Html.ActionLink("Back to List", "Index")
                </div>

            </form>

        </div>

    </div>
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script>
        $(function () {
            $('#datepicker').datepicker();
        })

    </script>

}


